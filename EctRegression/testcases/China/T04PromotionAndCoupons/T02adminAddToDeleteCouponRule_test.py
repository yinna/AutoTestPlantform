# NOTE: Generated By HttpRunner v3.1.4
# FROM: testcases\China\T04PromotionAndCoupons\T02adminAddToDeleteCouponRule.yml


import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase

from testcases.China.T01setUp.T02cnAdminLogin_test import (
    TestCaseT02Cnadminlogin as T02Cnadminlogin,
)


class TestCaseT02Adminaddtodeletecouponrule(HttpRunner):

    config = (
        Config("request methods testcase with functions")
        .variables(
            **{
                "shanghaiCityEntity": "${getCityEntityInfo(shanghai)}",
                "ningboCityEntity": "${getCityEntityInfo(ningbo)}",
                "shekouCityEntity": "${getCityEntityInfo(shekou)}",
                "shekouPortEntity": "${getPortEntityInfo(shekou)}",
                "hoChiMinhPortEntity": "${getPortEntityInfo(shekou)}",
                "NewYorkPortEntity": "${getPortEntityInfo(New York)}",
                "shanghaiPortEntity": "${getPortEntityInfo(shanghai)}",
                "ningboPortEntity": "${getPortEntityInfo(ningbo)}",
                "penangPortEntity": "${getPortEntityInfo(Penang)}",
                "karachiCityEntity": "${getCityEntityInfo(Karachi)}",
                "rotterdamCityEntity": "${getCityEntityInfo(Rotterdam)}",
                "shanghaiCityUuid": "${getCityUuid(Shanghai)}",
                "ningboCityUuid": "${getCityUuid(Ningbo)}",
                "shekouCityUuid": "${getCityUuid(Shekou)}",
                "karachiCityUuid": "${getCityUuid(Karachi)}",
                "hoChiMinhCityUuid": "${getCityUuid(Ho Chi Minh)}",
                "rotterdamCityUuid": "${getCityUuid(Rotterdam)}",
                "karachiPortUuid": "${getPortUuid(Karachi)}",
                "hoChiMinhPortUuid": "${getPortUuid(Ho Chi Minh)}",
                "newYorkPortUuid": "${getPortUuid(New York)}",
                "shanghaiPortUuid": "${getPortUuid(Shanghai)}",
                "ningboPortUuid": "${getPortUuid(Ningbo)}",
                "penangPortUuid": "${getPortUuid(Penang)}",
                "today": "${getCurrentDay()}",
                "couponName": "${getJoinString($today,join,新增优惠券automation)}",
            }
        )
        .base_url("http://mall.ectpp.opsmart.cn")
        .verify(False)
    )

    teststeps = [
        Step(RunTestCase("login").call(T02Cnadminlogin).export(*["cnAdminUserToken"])),
        Step(
            RunRequest("admin add coupon rule")
            .post("/api/product/coupon/GENERAL/create-rule")
            .with_headers(
                **{
                    "X-Auth-Token": "$cnAdminUserToken",
                    "Content-Type": "application/json;charset=UTF-8",
                }
            )
            .with_json(
                {
                    "assignmentRuleParams": [
                        {
                            "assignType": "REGISTER",
                            "assignUnit": "DEFAULT",
                            "assignAmount": 1,
                            "filterEndTime": "2021-01-31T15:59:59.000Z",
                            "filterStartTime": "2020-08-31T16:00:00.000Z",
                            "assignQuantity": 1,
                            "filterTimeOption": "REGISTER_TIME",
                        }
                    ],
                    "usageRuleParam": {
                        "name": "$couponName",
                        "type": "SHIPMENT",
                        "validityType": "PERIOD",
                        "value": 10,
                        "currency": "USD",
                        "startTime": "",
                        "endTime": "",
                        "usageUnit": "TEU",
                        "status": "DISABLE",
                        "tradeArea": "APTD",
                        "tradeLane": ["AUS", "AUZ", "IAR", "IAG"],
                        "serviceCode": ["PMX", "AEU5"],
                        "vesselName": "COSCO ANTWERP",
                        "voyageNo": "200",
                        "direction": "W",
                        "commodityCode": "automation",
                        "porCityUuid": ["$shanghaiCityUuid", "$ningboCityUuid"],
                        "exPorCityUuid": ["$shekouCityUuid"],
                        "porCitys": ["$shanghaiCityEntity", "$ningboCityEntity"],
                        "exPorCitys": ["$shekouCityEntity"],
                        "podPortUuid": ["$karachiPortUuid", "$hoChiMinhPortUuid"],
                        "exPodPortUuid": ["$newYorkPortUuid"],
                        "podPorts": ["$shekouPortEntity", "$hoChiMinhPortEntity"],
                        "exPodPorts": ["$NewYorkPortEntity"],
                        "polPortUuid": ["$shanghaiPortUuid", "$ningboPortUuid"],
                        "exPolPortUuid": ["$penangPortUuid"],
                        "polPorts": ["$shanghaiPortEntity", "$ningboPortEntity"],
                        "exPolPorts": ["$penangPortEntity"],
                        "fndCityUuid": ["$karachiCityUuid", "$hoChiMinhCityUuid"],
                        "exFndCityUuid": ["$rotterdamCityUuid"],
                        "fndCitys": ["$karachiCityEntity"],
                        "exFndCitys": ["$rotterdamCityEntity"],
                        "minOceanFee": 200,
                        "maxOceanFee": 500,
                        "maxUseLimit": 3,
                        "isScheduled": 0,
                        "periodUnit": "WEEKS",
                        "periodValue": 2,
                        "cargoType": "GENERAL",
                        "porCtryCode": "CN",
                        "fndCtryCode": "PK",
                        "exPorCtryCode": ["PK"],
                        "exFndCtryCode": ["HK"],
                        "allowWithdraw": True,
                    },
                }
            )
            .teardown_hook("${sleepTime(2)}")
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("admin query coupon info and get coupon id")
            .post(
                "/api/product/coupon/GENERAL/search-rule?sortBy=updateTime&page=1&size=20"
            )
            .with_headers(
                **{
                    "X-Auth-Token": "$cnAdminUserToken",
                    "Content-Type": "application/json;charset=UTF-8",
                }
            )
            .with_json(
                {
                    "status": "",
                    "porCityUuid": "",
                    "isScheduled": "",
                    "assignmentType": "",
                    "polPortUuid": "",
                    "podPortUuid": "",
                    "fndCityUuid": "",
                    "porCtryCode": "",
                    "fndCtryCode": "",
                    "exPorCtryCode": "",
                    "exPorCityUuid": "",
                    "exFndCityUuid": "",
                    "exFndCtryCode": "",
                    "exPolPortUuid": "",
                    "exPodPortUuid": "",
                    "usageUnit": "ALL",
                    "channelCode": "GENERAL",
                    "isActive": 1,
                    "name": "$couponName",
                }
            )
            .extract()
            .with_jmespath("body.content[0].id", "couponRuleId")
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("set coupon rule status from disable to enable")
            .post("/api/product/coupon/GENERAL/change-rule-status")
            .with_headers(
                **{
                    "X-Auth-Token": "$cnAdminUserToken",
                    "Content-Type": "application/json;charset=UTF-8",
                }
            )
            .with_json({"id": "$couponRuleId", "status": "ENABLE"})
            .teardown_hook("${sleepTime(1)}")
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("set coupon rule status from enable to disable")
            .post("/api/product/coupon/GENERAL/change-rule-status")
            .with_headers(
                **{
                    "X-Auth-Token": "$cnAdminUserToken",
                    "Content-Type": "application/json;charset=UTF-8",
                }
            )
            .with_json({"id": "$couponRuleId", "status": "DISABLE"})
            .teardown_hook("${sleepTime(1)}")
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("delete coupon")
            .post("/api/product/coupon/GENERAL/delete-rule")
            .with_headers(
                **{
                    "X-Auth-Token": "$cnAdminUserToken",
                    "Content-Type": "application/json;charset=UTF-8",
                }
            )
            .with_json({"id": "$couponRuleId"})
            .teardown_hook("${sleepTime(1)}")
            .validate()
            .assert_equal("status_code", 200)
        ),
    ]


if __name__ == "__main__":
    TestCaseT02Adminaddtodeletecouponrule().test_start()
